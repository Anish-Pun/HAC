// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_images_Block_entry_gmem_rd_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY,
        m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY,
        m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID,
        m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA,
        m_axi_gmem_0_RLAST,
        m_axi_gmem_0_RID,
        m_axi_gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER,
        m_axi_gmem_0_RRESP,
        m_axi_gmem_0_BVALID,
        m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP,
        m_axi_gmem_0_BID,
        m_axi_gmem_0_BUSER,
        input_r,
        conv_result_address0,
        conv_result_ce0,
        conv_result_we0,
        conv_result_d0,
        img_height,
        img_width,
        max_result_address0,
        max_result_ce0,
        max_result_we0,
        max_result_d0,
        min_result_address0,
        min_result_ce0,
        min_result_we0,
        min_result_d0,
        avg_result_address0,
        avg_result_ce0,
        avg_result_we0,
        avg_result_d0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_0_AWVALID;
input   m_axi_gmem_0_AWREADY;
output  [63:0] m_axi_gmem_0_AWADDR;
output  [0:0] m_axi_gmem_0_AWID;
output  [31:0] m_axi_gmem_0_AWLEN;
output  [2:0] m_axi_gmem_0_AWSIZE;
output  [1:0] m_axi_gmem_0_AWBURST;
output  [1:0] m_axi_gmem_0_AWLOCK;
output  [3:0] m_axi_gmem_0_AWCACHE;
output  [2:0] m_axi_gmem_0_AWPROT;
output  [3:0] m_axi_gmem_0_AWQOS;
output  [3:0] m_axi_gmem_0_AWREGION;
output  [0:0] m_axi_gmem_0_AWUSER;
output   m_axi_gmem_0_WVALID;
input   m_axi_gmem_0_WREADY;
output  [7:0] m_axi_gmem_0_WDATA;
output  [0:0] m_axi_gmem_0_WSTRB;
output   m_axi_gmem_0_WLAST;
output  [0:0] m_axi_gmem_0_WID;
output  [0:0] m_axi_gmem_0_WUSER;
output   m_axi_gmem_0_ARVALID;
input   m_axi_gmem_0_ARREADY;
output  [63:0] m_axi_gmem_0_ARADDR;
output  [0:0] m_axi_gmem_0_ARID;
output  [31:0] m_axi_gmem_0_ARLEN;
output  [2:0] m_axi_gmem_0_ARSIZE;
output  [1:0] m_axi_gmem_0_ARBURST;
output  [1:0] m_axi_gmem_0_ARLOCK;
output  [3:0] m_axi_gmem_0_ARCACHE;
output  [2:0] m_axi_gmem_0_ARPROT;
output  [3:0] m_axi_gmem_0_ARQOS;
output  [3:0] m_axi_gmem_0_ARREGION;
output  [0:0] m_axi_gmem_0_ARUSER;
input   m_axi_gmem_0_RVALID;
output   m_axi_gmem_0_RREADY;
input  [7:0] m_axi_gmem_0_RDATA;
input   m_axi_gmem_0_RLAST;
input  [0:0] m_axi_gmem_0_RID;
input  [10:0] m_axi_gmem_0_RFIFONUM;
input  [0:0] m_axi_gmem_0_RUSER;
input  [1:0] m_axi_gmem_0_RRESP;
input   m_axi_gmem_0_BVALID;
output   m_axi_gmem_0_BREADY;
input  [1:0] m_axi_gmem_0_BRESP;
input  [0:0] m_axi_gmem_0_BID;
input  [0:0] m_axi_gmem_0_BUSER;
input  [63:0] input_r;
output  [21:0] conv_result_address0;
output   conv_result_ce0;
output   conv_result_we0;
output  [7:0] conv_result_d0;
input  [31:0] img_height;
input  [31:0] img_width;
output  [19:0] max_result_address0;
output   max_result_ce0;
output   max_result_we0;
output  [7:0] max_result_d0;
output  [19:0] min_result_address0;
output   min_result_ce0;
output   min_result_we0;
output  [7:0] min_result_d0;
output  [19:0] avg_result_address0;
output   avg_result_ce0;
output   avg_result_we0;
output  [7:0] avg_result_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_0_ARVALID;
reg[63:0] m_axi_gmem_0_ARADDR;
reg[0:0] m_axi_gmem_0_ARID;
reg[31:0] m_axi_gmem_0_ARLEN;
reg[2:0] m_axi_gmem_0_ARSIZE;
reg[1:0] m_axi_gmem_0_ARBURST;
reg[1:0] m_axi_gmem_0_ARLOCK;
reg[3:0] m_axi_gmem_0_ARCACHE;
reg[2:0] m_axi_gmem_0_ARPROT;
reg[3:0] m_axi_gmem_0_ARQOS;
reg[3:0] m_axi_gmem_0_ARREGION;
reg[0:0] m_axi_gmem_0_ARUSER;
reg m_axi_gmem_0_RREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] img_width_read_reg_109;
reg    ap_block_state1;
reg   [31:0] img_height_read_reg_117;
reg   [63:0] input_r_read_reg_125;
wire    grp_convolution_1_1_fu_62_ap_start;
wire    grp_convolution_1_1_fu_62_ap_done;
wire    grp_convolution_1_1_fu_62_ap_idle;
wire    grp_convolution_1_1_fu_62_ap_ready;
wire    grp_convolution_1_1_fu_62_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWID;
wire   [31:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_AWUSER;
wire    grp_convolution_1_1_fu_62_m_axi_gmem_0_WVALID;
wire   [7:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_WDATA;
wire   [0:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_WSTRB;
wire    grp_convolution_1_1_fu_62_m_axi_gmem_0_WLAST;
wire   [0:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_WID;
wire   [0:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_WUSER;
wire    grp_convolution_1_1_fu_62_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARID;
wire   [31:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_convolution_1_1_fu_62_m_axi_gmem_0_ARUSER;
wire    grp_convolution_1_1_fu_62_m_axi_gmem_0_RREADY;
wire    grp_convolution_1_1_fu_62_m_axi_gmem_0_BREADY;
wire   [21:0] grp_convolution_1_1_fu_62_output_r_address0;
wire    grp_convolution_1_1_fu_62_output_r_ce0;
wire    grp_convolution_1_1_fu_62_output_r_we0;
wire   [7:0] grp_convolution_1_1_fu_62_output_r_d0;
wire    grp_pooling_1_1_fu_76_ap_start;
wire    grp_pooling_1_1_fu_76_ap_done;
wire    grp_pooling_1_1_fu_76_ap_idle;
wire    grp_pooling_1_1_fu_76_ap_ready;
wire    grp_pooling_1_1_fu_76_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWID;
wire   [31:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_AWUSER;
wire    grp_pooling_1_1_fu_76_m_axi_gmem_0_WVALID;
wire   [7:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_WDATA;
wire   [0:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_WSTRB;
wire    grp_pooling_1_1_fu_76_m_axi_gmem_0_WLAST;
wire   [0:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_WID;
wire   [0:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_WUSER;
wire    grp_pooling_1_1_fu_76_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARID;
wire   [31:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_pooling_1_1_fu_76_m_axi_gmem_0_ARUSER;
wire    grp_pooling_1_1_fu_76_m_axi_gmem_0_RREADY;
wire    grp_pooling_1_1_fu_76_m_axi_gmem_0_BREADY;
wire   [19:0] grp_pooling_1_1_fu_76_output_r_address0;
wire    grp_pooling_1_1_fu_76_output_r_ce0;
wire    grp_pooling_1_1_fu_76_output_r_we0;
wire   [7:0] grp_pooling_1_1_fu_76_output_r_d0;
wire    grp_pooling_2_1_fu_87_ap_start;
wire    grp_pooling_2_1_fu_87_ap_done;
wire    grp_pooling_2_1_fu_87_ap_idle;
wire    grp_pooling_2_1_fu_87_ap_ready;
wire    grp_pooling_2_1_fu_87_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWID;
wire   [31:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_AWUSER;
wire    grp_pooling_2_1_fu_87_m_axi_gmem_0_WVALID;
wire   [7:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_WDATA;
wire   [0:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_WSTRB;
wire    grp_pooling_2_1_fu_87_m_axi_gmem_0_WLAST;
wire   [0:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_WID;
wire   [0:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_WUSER;
wire    grp_pooling_2_1_fu_87_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARID;
wire   [31:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_pooling_2_1_fu_87_m_axi_gmem_0_ARUSER;
wire    grp_pooling_2_1_fu_87_m_axi_gmem_0_RREADY;
wire    grp_pooling_2_1_fu_87_m_axi_gmem_0_BREADY;
wire   [19:0] grp_pooling_2_1_fu_87_output_r_address0;
wire    grp_pooling_2_1_fu_87_output_r_ce0;
wire    grp_pooling_2_1_fu_87_output_r_we0;
wire   [7:0] grp_pooling_2_1_fu_87_output_r_d0;
wire    grp_pooling_1_2_fu_98_ap_start;
wire    grp_pooling_1_2_fu_98_ap_done;
wire    grp_pooling_1_2_fu_98_ap_idle;
wire    grp_pooling_1_2_fu_98_ap_ready;
wire    grp_pooling_1_2_fu_98_m_axi_gmem_0_AWVALID;
wire   [63:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWADDR;
wire   [0:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWID;
wire   [31:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWLEN;
wire   [2:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWSIZE;
wire   [1:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWBURST;
wire   [1:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWLOCK;
wire   [3:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWCACHE;
wire   [2:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWPROT;
wire   [3:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWQOS;
wire   [3:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWREGION;
wire   [0:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_AWUSER;
wire    grp_pooling_1_2_fu_98_m_axi_gmem_0_WVALID;
wire   [7:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_WDATA;
wire   [0:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_WSTRB;
wire    grp_pooling_1_2_fu_98_m_axi_gmem_0_WLAST;
wire   [0:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_WID;
wire   [0:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_WUSER;
wire    grp_pooling_1_2_fu_98_m_axi_gmem_0_ARVALID;
wire   [63:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARADDR;
wire   [0:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARID;
wire   [31:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARLEN;
wire   [2:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARSIZE;
wire   [1:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARBURST;
wire   [1:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARLOCK;
wire   [3:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARCACHE;
wire   [2:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARPROT;
wire   [3:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARQOS;
wire   [3:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARREGION;
wire   [0:0] grp_pooling_1_2_fu_98_m_axi_gmem_0_ARUSER;
wire    grp_pooling_1_2_fu_98_m_axi_gmem_0_RREADY;
wire    grp_pooling_1_2_fu_98_m_axi_gmem_0_BREADY;
wire   [19:0] grp_pooling_1_2_fu_98_output_r_address0;
wire    grp_pooling_1_2_fu_98_output_r_ce0;
wire    grp_pooling_1_2_fu_98_output_r_we0;
wire   [7:0] grp_pooling_1_2_fu_98_output_r_d0;
reg    grp_convolution_1_1_fu_62_ap_start_reg;
reg    ap_block_state1_ignore_call4;
wire    ap_CS_fsm_state2;
reg    grp_pooling_1_1_fu_76_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_pooling_2_1_fu_87_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_pooling_1_2_fu_98_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 grp_convolution_1_1_fu_62_ap_start_reg = 1'b0;
#0 grp_pooling_1_1_fu_76_ap_start_reg = 1'b0;
#0 grp_pooling_2_1_fu_87_ap_start_reg = 1'b0;
#0 grp_pooling_1_2_fu_98_ap_start_reg = 1'b0;
end

process_images_convolution_1_1 grp_convolution_1_1_fu_62(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution_1_1_fu_62_ap_start),
    .ap_done(grp_convolution_1_1_fu_62_ap_done),
    .ap_idle(grp_convolution_1_1_fu_62_ap_idle),
    .ap_ready(grp_convolution_1_1_fu_62_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_convolution_1_1_fu_62_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_convolution_1_1_fu_62_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_convolution_1_1_fu_62_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_convolution_1_1_fu_62_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_convolution_1_1_fu_62_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_convolution_1_1_fu_62_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_convolution_1_1_fu_62_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_convolution_1_1_fu_62_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_convolution_1_1_fu_62_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_convolution_1_1_fu_62_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .input_r(input_r_read_reg_125),
    .output_r_address0(grp_convolution_1_1_fu_62_output_r_address0),
    .output_r_ce0(grp_convolution_1_1_fu_62_output_r_ce0),
    .output_r_we0(grp_convolution_1_1_fu_62_output_r_we0),
    .output_r_d0(grp_convolution_1_1_fu_62_output_r_d0),
    .img_height(img_height_read_reg_117),
    .img_width(img_width_read_reg_109)
);

process_images_pooling_1_1 grp_pooling_1_1_fu_76(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pooling_1_1_fu_76_ap_start),
    .ap_done(grp_pooling_1_1_fu_76_ap_done),
    .ap_idle(grp_pooling_1_1_fu_76_ap_idle),
    .ap_ready(grp_pooling_1_1_fu_76_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_pooling_1_1_fu_76_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_pooling_1_1_fu_76_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_pooling_1_1_fu_76_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_pooling_1_1_fu_76_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_pooling_1_1_fu_76_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_pooling_1_1_fu_76_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_pooling_1_1_fu_76_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_pooling_1_1_fu_76_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_pooling_1_1_fu_76_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_pooling_1_1_fu_76_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .input_r(input_r_read_reg_125),
    .output_r_address0(grp_pooling_1_1_fu_76_output_r_address0),
    .output_r_ce0(grp_pooling_1_1_fu_76_output_r_ce0),
    .output_r_we0(grp_pooling_1_1_fu_76_output_r_we0),
    .output_r_d0(grp_pooling_1_1_fu_76_output_r_d0),
    .img_height(img_height_read_reg_117),
    .img_width(img_width_read_reg_109)
);

process_images_pooling_2_1 grp_pooling_2_1_fu_87(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pooling_2_1_fu_87_ap_start),
    .ap_done(grp_pooling_2_1_fu_87_ap_done),
    .ap_idle(grp_pooling_2_1_fu_87_ap_idle),
    .ap_ready(grp_pooling_2_1_fu_87_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_pooling_2_1_fu_87_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_pooling_2_1_fu_87_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_pooling_2_1_fu_87_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_pooling_2_1_fu_87_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_pooling_2_1_fu_87_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_pooling_2_1_fu_87_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_pooling_2_1_fu_87_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_pooling_2_1_fu_87_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_pooling_2_1_fu_87_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_pooling_2_1_fu_87_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .input_r(input_r_read_reg_125),
    .output_r_address0(grp_pooling_2_1_fu_87_output_r_address0),
    .output_r_ce0(grp_pooling_2_1_fu_87_output_r_ce0),
    .output_r_we0(grp_pooling_2_1_fu_87_output_r_we0),
    .output_r_d0(grp_pooling_2_1_fu_87_output_r_d0),
    .img_height(img_height_read_reg_117),
    .img_width(img_width_read_reg_109)
);

process_images_pooling_1_2 grp_pooling_1_2_fu_98(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pooling_1_2_fu_98_ap_start),
    .ap_done(grp_pooling_1_2_fu_98_ap_done),
    .ap_idle(grp_pooling_1_2_fu_98_ap_idle),
    .ap_ready(grp_pooling_1_2_fu_98_ap_ready),
    .m_axi_gmem_0_AWVALID(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWVALID),
    .m_axi_gmem_0_AWREADY(1'b0),
    .m_axi_gmem_0_AWADDR(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWADDR),
    .m_axi_gmem_0_AWID(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWID),
    .m_axi_gmem_0_AWLEN(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWLEN),
    .m_axi_gmem_0_AWSIZE(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWSIZE),
    .m_axi_gmem_0_AWBURST(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWBURST),
    .m_axi_gmem_0_AWLOCK(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWLOCK),
    .m_axi_gmem_0_AWCACHE(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWCACHE),
    .m_axi_gmem_0_AWPROT(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWPROT),
    .m_axi_gmem_0_AWQOS(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWQOS),
    .m_axi_gmem_0_AWREGION(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWREGION),
    .m_axi_gmem_0_AWUSER(grp_pooling_1_2_fu_98_m_axi_gmem_0_AWUSER),
    .m_axi_gmem_0_WVALID(grp_pooling_1_2_fu_98_m_axi_gmem_0_WVALID),
    .m_axi_gmem_0_WREADY(1'b0),
    .m_axi_gmem_0_WDATA(grp_pooling_1_2_fu_98_m_axi_gmem_0_WDATA),
    .m_axi_gmem_0_WSTRB(grp_pooling_1_2_fu_98_m_axi_gmem_0_WSTRB),
    .m_axi_gmem_0_WLAST(grp_pooling_1_2_fu_98_m_axi_gmem_0_WLAST),
    .m_axi_gmem_0_WID(grp_pooling_1_2_fu_98_m_axi_gmem_0_WID),
    .m_axi_gmem_0_WUSER(grp_pooling_1_2_fu_98_m_axi_gmem_0_WUSER),
    .m_axi_gmem_0_ARVALID(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARVALID),
    .m_axi_gmem_0_ARREADY(m_axi_gmem_0_ARREADY),
    .m_axi_gmem_0_ARADDR(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARADDR),
    .m_axi_gmem_0_ARID(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARID),
    .m_axi_gmem_0_ARLEN(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARLEN),
    .m_axi_gmem_0_ARSIZE(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARSIZE),
    .m_axi_gmem_0_ARBURST(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARBURST),
    .m_axi_gmem_0_ARLOCK(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARLOCK),
    .m_axi_gmem_0_ARCACHE(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARCACHE),
    .m_axi_gmem_0_ARPROT(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARPROT),
    .m_axi_gmem_0_ARQOS(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARQOS),
    .m_axi_gmem_0_ARREGION(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARREGION),
    .m_axi_gmem_0_ARUSER(grp_pooling_1_2_fu_98_m_axi_gmem_0_ARUSER),
    .m_axi_gmem_0_RVALID(m_axi_gmem_0_RVALID),
    .m_axi_gmem_0_RREADY(grp_pooling_1_2_fu_98_m_axi_gmem_0_RREADY),
    .m_axi_gmem_0_RDATA(m_axi_gmem_0_RDATA),
    .m_axi_gmem_0_RLAST(m_axi_gmem_0_RLAST),
    .m_axi_gmem_0_RID(m_axi_gmem_0_RID),
    .m_axi_gmem_0_RFIFONUM(m_axi_gmem_0_RFIFONUM),
    .m_axi_gmem_0_RUSER(m_axi_gmem_0_RUSER),
    .m_axi_gmem_0_RRESP(m_axi_gmem_0_RRESP),
    .m_axi_gmem_0_BVALID(1'b0),
    .m_axi_gmem_0_BREADY(grp_pooling_1_2_fu_98_m_axi_gmem_0_BREADY),
    .m_axi_gmem_0_BRESP(2'd0),
    .m_axi_gmem_0_BID(1'd0),
    .m_axi_gmem_0_BUSER(1'd0),
    .input_r(input_r_read_reg_125),
    .output_r_address0(grp_pooling_1_2_fu_98_output_r_address0),
    .output_r_ce0(grp_pooling_1_2_fu_98_output_r_ce0),
    .output_r_we0(grp_pooling_1_2_fu_98_output_r_we0),
    .output_r_d0(grp_pooling_1_2_fu_98_output_r_d0),
    .img_height(img_height_read_reg_117),
    .img_width(img_width_read_reg_109)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_pooling_1_2_fu_98_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution_1_1_fu_62_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1_ignore_call4))) begin
            grp_convolution_1_1_fu_62_ap_start_reg <= 1'b1;
        end else if ((grp_convolution_1_1_fu_62_ap_ready == 1'b1)) begin
            grp_convolution_1_1_fu_62_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pooling_1_1_fu_76_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_pooling_1_1_fu_76_ap_start_reg <= 1'b1;
        end else if ((grp_pooling_1_1_fu_76_ap_ready == 1'b1)) begin
            grp_pooling_1_1_fu_76_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pooling_1_2_fu_98_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_pooling_1_2_fu_98_ap_start_reg <= 1'b1;
        end else if ((grp_pooling_1_2_fu_98_ap_ready == 1'b1)) begin
            grp_pooling_1_2_fu_98_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pooling_2_1_fu_87_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_pooling_2_1_fu_87_ap_start_reg <= 1'b1;
        end else if ((grp_pooling_2_1_fu_87_ap_ready == 1'b1)) begin
            grp_pooling_2_1_fu_87_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        img_height_read_reg_117 <= img_height;
        img_width_read_reg_109 <= img_width;
        input_r_read_reg_125 <= input_r;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_convolution_1_1_fu_62_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_pooling_1_1_fu_76_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_pooling_2_1_fu_87_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_pooling_1_2_fu_98_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_pooling_1_2_fu_98_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_pooling_1_2_fu_98_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARADDR = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARADDR = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARADDR = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARADDR = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARADDR;
    end else begin
        m_axi_gmem_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARBURST = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARBURST = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARBURST = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARBURST = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARBURST;
    end else begin
        m_axi_gmem_0_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARCACHE = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARCACHE = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARCACHE = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARCACHE = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARCACHE;
    end else begin
        m_axi_gmem_0_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARID = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARID = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARID = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARID = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARID;
    end else begin
        m_axi_gmem_0_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARLEN = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARLEN = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARLEN = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARLEN = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARLEN;
    end else begin
        m_axi_gmem_0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARLOCK = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARLOCK = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARLOCK = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARLOCK = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARLOCK;
    end else begin
        m_axi_gmem_0_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARPROT = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARPROT = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARPROT = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARPROT = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARPROT;
    end else begin
        m_axi_gmem_0_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARQOS = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARQOS = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARQOS = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARQOS = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARQOS;
    end else begin
        m_axi_gmem_0_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARREGION = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARREGION = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARREGION = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARREGION = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARREGION;
    end else begin
        m_axi_gmem_0_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARSIZE = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARSIZE = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARSIZE = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARSIZE = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARSIZE;
    end else begin
        m_axi_gmem_0_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARUSER = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARUSER = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARUSER = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARUSER = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARUSER;
    end else begin
        m_axi_gmem_0_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_ARVALID = grp_pooling_1_2_fu_98_m_axi_gmem_0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_ARVALID = grp_pooling_2_1_fu_87_m_axi_gmem_0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_ARVALID = grp_pooling_1_1_fu_76_m_axi_gmem_0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_ARVALID = grp_convolution_1_1_fu_62_m_axi_gmem_0_ARVALID;
    end else begin
        m_axi_gmem_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        m_axi_gmem_0_RREADY = grp_pooling_1_2_fu_98_m_axi_gmem_0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_gmem_0_RREADY = grp_pooling_2_1_fu_87_m_axi_gmem_0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_gmem_0_RREADY = grp_pooling_1_1_fu_76_m_axi_gmem_0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_0_RREADY = grp_convolution_1_1_fu_62_m_axi_gmem_0_RREADY;
    end else begin
        m_axi_gmem_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_convolution_1_1_fu_62_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_pooling_1_1_fu_76_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_pooling_2_1_fu_87_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_pooling_1_2_fu_98_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call4 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign avg_result_address0 = grp_pooling_1_2_fu_98_output_r_address0;

assign avg_result_ce0 = grp_pooling_1_2_fu_98_output_r_ce0;

assign avg_result_d0 = grp_pooling_1_2_fu_98_output_r_d0;

assign avg_result_we0 = grp_pooling_1_2_fu_98_output_r_we0;

assign conv_result_address0 = grp_convolution_1_1_fu_62_output_r_address0;

assign conv_result_ce0 = grp_convolution_1_1_fu_62_output_r_ce0;

assign conv_result_d0 = grp_convolution_1_1_fu_62_output_r_d0;

assign conv_result_we0 = grp_convolution_1_1_fu_62_output_r_we0;

assign grp_convolution_1_1_fu_62_ap_start = grp_convolution_1_1_fu_62_ap_start_reg;

assign grp_pooling_1_1_fu_76_ap_start = grp_pooling_1_1_fu_76_ap_start_reg;

assign grp_pooling_1_2_fu_98_ap_start = grp_pooling_1_2_fu_98_ap_start_reg;

assign grp_pooling_2_1_fu_87_ap_start = grp_pooling_2_1_fu_87_ap_start_reg;

assign m_axi_gmem_0_AWADDR = 64'd0;

assign m_axi_gmem_0_AWBURST = 2'd0;

assign m_axi_gmem_0_AWCACHE = 4'd0;

assign m_axi_gmem_0_AWID = 1'd0;

assign m_axi_gmem_0_AWLEN = 32'd0;

assign m_axi_gmem_0_AWLOCK = 2'd0;

assign m_axi_gmem_0_AWPROT = 3'd0;

assign m_axi_gmem_0_AWQOS = 4'd0;

assign m_axi_gmem_0_AWREGION = 4'd0;

assign m_axi_gmem_0_AWSIZE = 3'd0;

assign m_axi_gmem_0_AWUSER = 1'd0;

assign m_axi_gmem_0_AWVALID = 1'b0;

assign m_axi_gmem_0_BREADY = 1'b0;

assign m_axi_gmem_0_WDATA = 8'd0;

assign m_axi_gmem_0_WID = 1'd0;

assign m_axi_gmem_0_WLAST = 1'b0;

assign m_axi_gmem_0_WSTRB = 1'd0;

assign m_axi_gmem_0_WUSER = 1'd0;

assign m_axi_gmem_0_WVALID = 1'b0;

assign max_result_address0 = grp_pooling_1_1_fu_76_output_r_address0;

assign max_result_ce0 = grp_pooling_1_1_fu_76_output_r_ce0;

assign max_result_d0 = grp_pooling_1_1_fu_76_output_r_d0;

assign max_result_we0 = grp_pooling_1_1_fu_76_output_r_we0;

assign min_result_address0 = grp_pooling_2_1_fu_87_output_r_address0;

assign min_result_ce0 = grp_pooling_2_1_fu_87_output_r_ce0;

assign min_result_d0 = grp_pooling_2_1_fu_87_output_r_d0;

assign min_result_we0 = grp_pooling_2_1_fu_87_output_r_we0;

endmodule //process_images_Block_entry_gmem_rd_proc
