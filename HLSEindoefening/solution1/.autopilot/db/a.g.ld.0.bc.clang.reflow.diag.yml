--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 76, 
                   Column: 2 }
Function:        process_images
Args:            
  - Callee:          convolution
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 79, 
                   Column: 5 }
Function:        process_images
Args:            
  - Callee:          pooling
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 7, 
                   Column: 18 }
Function:        convolution
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_7_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 8, 
                   Column: 25 }
Function:        convolution
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_8_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 10, 
                   Column: 30 }
Function:        convolution
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_10_3
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 11, 
                   Column: 34 }
Function:        convolution
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_11_4
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                   Column: 0 }
Function:        convolution
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_10_3
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:10:30'
  - String:          ') '
  - String:          'in function '''
  - String:          convolution
  - String:          ''' completely with a factor of '
  - Factor:          '3'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                   Column: 0 }
Function:        convolution
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_11_4
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:11:34'
  - String:          ') '
  - String:          'in function '''
  - String:          convolution
  - String:          ''' completely with a factor of '
  - Factor:          '3'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                   Column: 0 }
Function:        convolution
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_11_4
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:11:34'
  - String:          ') '
  - String:          'in function '''
  - String:          convolution
  - String:          ''' completely with a factor of '
  - Factor:          '3'
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                   Column: 0 }
Function:        convolution
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_11_4
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:11:34'
  - String:          ') '
  - String:          'in function '''
  - String:          convolution
  - String:          ''' completely with a factor of '
  - Factor:          '3'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 76, 
                   Column: 2 }
Function:        process_images
Args:            
  - Callee:          convolution
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 79, 
                   Column: 5 }
Function:        process_images
Args:            
  - Callee:          pooling
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
Function:        apatb_process_images_ir
Args:            
  - Callee:          process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          apatb_process_images_ir
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 83, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        conv_outputseq
  - ArrayName:       conv_output
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_83_1
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:83:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 85, 
                       Column: 17 }
  - OrigDirection:   write
  - OrigID:          for.inc.store.6
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        max_outputseq
  - ArrayName:       max_output
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_91_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:91:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 93, 
                       Column: 16 }
  - OrigDirection:   write
  - OrigID:          for.inc26.store.6
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        min_outputseq
  - ArrayName:       min_output
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_91_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:91:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 94, 
                       Column: 23 }
  - OrigDirection:   write
  - OrigID:          for.inc26.store.11
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of '
  - Length:          variable
  - String:          ' length'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        avg_outputseq
  - ArrayName:       avg_output
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_91_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:91:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 95, 
                       Column: 23 }
  - OrigDirection:   write
  - OrigID:          for.inc26.store.16
...
--- !Missed
Pass:            reflow-burst-inference
Name:            AccessClobbered
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                   Column: 32 }
Function:        convolution
Args:            
  - String:          'Access is clobbered by '
  - ClobberedBy:     load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - OrigDirection:   read
  - OrigID:          if.then.load.2
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        convolution
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            AccessInCondBranch
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                   Column: 32 }
Function:        convolution
Args:            
  - String:          'Access '
  - Access:          load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - String:          ' is in the conditional branch'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - OrigDirection:   read
  - OrigID:          if.then.239.load.2
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_8_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:8:25'
  - String:          ' '
  - Function:        convolution
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            AccessClobbered
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                   Column: 32 }
Function:        convolution
Args:            
  - String:          'Access is clobbered by '
  - ClobberedBy:     load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - OrigDirection:   read
  - OrigID:          if.then.1.load.2
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        convolution
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            AccessInCondBranch
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                   Column: 32 }
Function:        convolution
Args:            
  - String:          'Access '
  - Access:          load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - String:          ' is in the conditional branch'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - OrigDirection:   read
  - OrigID:          if.then.1.2.load.2
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_8_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:8:25'
  - String:          ' '
  - Function:        convolution
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            AccessClobbered
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                   Column: 32 }
Function:        convolution
Args:            
  - String:          'Access is clobbered by '
  - ClobberedBy:     load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - OrigDirection:   read
  - OrigID:          if.then.2.load.2
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        convolution
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            AccessInCondBranch
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                   Column: 32 }
Function:        convolution
Args:            
  - String:          'Access '
  - Access:          load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - String:          ' is in the conditional branch'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 15, 
                       Column: 32 }
  - OrigDirection:   read
  - OrigID:          if.then.2.2.load.2
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_8_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:8:25'
  - String:          ' '
  - Function:        convolution
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.1
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '2'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgepseq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_31_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ' '
  - Function:        pooling.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                       Column: 38 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.10
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 42, 
                       Column: 54 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.19
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.1
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '2'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep2seq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_31_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ' '
  - Function:        pooling.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 27 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.26
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 60 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.27
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.2
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '2'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgepseq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_31_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ' '
  - Function:        pooling.2
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                       Column: 38 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.10
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 42, 
                       Column: 54 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.19
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.2
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '2'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep2seq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_31_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ' '
  - Function:        pooling.2
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 27 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.26
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 60 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.27
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '2'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgepseq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_31_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ' '
  - Function:        pooling
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                       Column: 38 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.10
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 42, 
                       Column: 54 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.19
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '2'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        scevgep1seq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_31_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ' '
  - Function:        pooling
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 27 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.26
  - OrigAccess:      load
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 60 }
  - OrigDirection:   read
  - OrigID:          for.body5.load.27
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                       Column: 22 }
  - OrigDirection:   write
  - OrigID:          max_outputseq
  - ArrayName:       max_output
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_91_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:91:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                       Column: 22 }
  - OrigDirection:   write
  - OrigID:          min_outputseq
  - ArrayName:       min_output
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_91_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:91:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                       Column: 22 }
  - OrigDirection:   write
  - OrigID:          avg_outputseq
  - ArrayName:       avg_output
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_91_2
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:91:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 83, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 83, 
                       Column: 22 }
  - OrigDirection:   write
  - OrigID:          conv_outputseq
  - ArrayName:       conv_output
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_83_1
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:83:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.1
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                       Column: 38 }
  - OrigDirection:   read
  - OrigID:          scevgepseq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.1
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 27 }
  - OrigDirection:   read
  - OrigID:          scevgep2seq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.2
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                       Column: 38 }
  - OrigDirection:   read
  - OrigID:          scevgepseq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.2
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.2
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 27 }
  - OrigDirection:   read
  - OrigID:          scevgep2seq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.2
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                       Column: 38 }
  - OrigDirection:   read
  - OrigID:          scevgepseq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                       Column: 27 }
  - OrigDirection:   read
  - OrigID:          scevgep1seq
  - ArrayName:       input
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.2
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.2
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 7, 
                   Column: 18 }
Function:        convolution
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_7_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 8, 
                   Column: 25 }
Function:        convolution
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_8_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.2
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.2
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 7, 
                   Column: 18 }
Function:        convolution
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_7_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 8, 
                   Column: 25 }
Function:        convolution
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_8_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.1.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.1.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.1.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.1.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq1
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.1.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.1.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.2.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.2.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.2.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.2.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq1
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.2.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.2.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.1.2
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.1.2
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 32, 
                   Column: 38 }
Function:        pooling.1.2
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.1.2
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq1
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        pooling.1.2
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 43, 
                   Column: 27 }
Function:        pooling.1.2
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '2'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Missed
Pass:            reflow-burst-inference
Name:            BurstConflict
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Could not burst due to multiple potential '
  - Direction:       writes
  - String:          ' to the same bundle in the same region.'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                       Column: 22 }
  - OrigDirection:   write
  - OrigID:          seq1
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-inference
Name:            BurstConflict
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Could not burst due to multiple potential '
  - Direction:       writes
  - String:          ' to the same bundle in the same region.'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                       Column: 22 }
  - OrigDirection:   write
  - OrigID:          seq2
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 83, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_83_1
  - String:          ' '
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:83:22'
  - String:          ' '
  - Function:        process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 83, 
                   Column: 22 }
Function:        process_images
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of '
  - Length:          variable
  - String:          ' length and bit width '
  - Width:           '8'
  - String:          ' in loop '''
  - LoopName:        VITIS_LOOP_83_1
  - String:          '''('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:83:22'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.1.2
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.1.2
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.2.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.2.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.1.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.1.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 7, 
                   Column: 18 }
Function:        convolution.1.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_7_1
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Passed
Pass:            reflow-infer-unroll
Name:            ImplicitUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 8, 
                   Column: 25 }
Function:        convolution.1.1
Args:            
  - String:          'Loop '''
  - LoopName:        VITIS_LOOP_8_2
  - String:          ''' is marked as complete unroll implied by the pipeline pragma'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 91, 
                   Column: 22 }
Function:        Block_entry_gmem_wr_proc
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_91_2
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:91:22'
  - String:          ') '
  - String:          'in function '''
  - String:          Block_entry_gmem_wr_proc
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 83, 
                   Column: 22 }
Function:        Block_entry_gmem_wr_proc
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_83_1
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:83:22'
  - String:          ') '
  - String:          'in function '''
  - String:          Block_entry_gmem_wr_proc
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.1.2
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:30:19'
  - String:          ') '
  - String:          'in function '''
  - String:          pooling.1.2
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.1.2
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ') '
  - String:          'in function '''
  - String:          pooling.1.2
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.2.1
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:30:19'
  - String:          ') '
  - String:          'in function '''
  - String:          pooling.2.1
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.2.1
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ') '
  - String:          'in function '''
  - String:          pooling.2.1
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 30, 
                   Column: 19 }
Function:        pooling.1.1
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_30_1
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:30:19'
  - String:          ') '
  - String:          'in function '''
  - String:          pooling.1.1
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 31, 
                   Column: 26 }
Function:        pooling.1.1
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_31_2
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:31:26'
  - String:          ') '
  - String:          'in function '''
  - String:          pooling.1.1
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 7, 
                   Column: 18 }
Function:        convolution.1.1
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_7_1
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:7:18'
  - String:          ') '
  - String:          'in function '''
  - String:          convolution.1.1
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFailFullyUnroll
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 8, 
                   Column: 25 }
Function:        convolution.1.1
Args:            
  - String:          'Cannot unroll loop '''
  - LoopName:        VITIS_LOOP_8_2
  - String:          ''' ('
  - LoopLoc:         'HLSEindoefening/hls_process_images.c:8:25'
  - String:          ') '
  - String:          'in function '''
  - String:          convolution.1.1
  - String:          ''' as it has a variable trip count'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 76, 
                   Column: 2 }
Function:        Block_entry_gmem_rd_proc
Args:            
  - Callee:          convolution.1.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 4, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          Block_entry_gmem_rd_proc
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 0, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 79, 
                   Column: 5 }
Function:        Block_entry_gmem_rd_proc
Args:            
  - Callee:          pooling.1.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          Block_entry_gmem_rd_proc
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 0, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 80, 
                   Column: 5 }
Function:        Block_entry_gmem_rd_proc
Args:            
  - Callee:          pooling.2.1
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          Block_entry_gmem_rd_proc
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 0, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 81, 
                   Column: 5 }
Function:        Block_entry_gmem_rd_proc
Args:            
  - Callee:          pooling.1.2
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 27, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          Block_entry_gmem_rd_proc
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 0, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 76, 
                   Column: 2 }
Function:        process_images
Args:            
  - Callee:          Block_entry_gmem_rd_proc
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 0, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 83, 
                   Column: 40 }
Function:        process_images
Args:            
  - Callee:          Block_entry_proc.3
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 0, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 83, 
                   Column: 22 }
Function:        process_images
Args:            
  - Callee:          Block_entry_gmem_wr_proc
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 0, 
                       Column: 0 }
  - String:          ' not inlined into '
  - Caller:          process_images
    DebugLoc:        { File: HLSEindoefening/hls_process_images.c, Line: 52, 
                       Column: 0 }
  - String:          ' because it should never be inlined (cost=never)'
...
