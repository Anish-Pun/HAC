// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module process_images_process_images_Pipeline_VITIS_LOOP_21_1_VITIS_LOOP_22_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_TVALID,
        img_width,
        mul_ln3,
        image_r_address0,
        image_r_ce0,
        image_r_we0,
        image_r_d0,
        image_1_address0,
        image_1_ce0,
        image_1_we0,
        image_1_d0,
        image_2_address0,
        image_2_ce0,
        image_2_we0,
        image_2_d0,
        image_3_address0,
        image_3_ce0,
        image_3_we0,
        image_3_d0,
        image_4_address0,
        image_4_ce0,
        image_4_we0,
        image_4_d0,
        image_5_address0,
        image_5_ce0,
        image_5_we0,
        image_5_d0,
        in_stream_TDATA,
        in_stream_TREADY,
        in_stream_TKEEP,
        in_stream_TSTRB,
        in_stream_TUSER,
        in_stream_TLAST,
        in_stream_TID,
        in_stream_TDEST,
        grp_fu_873_p_din0,
        grp_fu_873_p_din1,
        grp_fu_873_p_dout0,
        grp_fu_873_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_stream_TVALID;
input  [31:0] img_width;
input  [61:0] mul_ln3;
output  [13:0] image_r_address0;
output   image_r_ce0;
output   image_r_we0;
output  [7:0] image_r_d0;
output  [13:0] image_1_address0;
output   image_1_ce0;
output   image_1_we0;
output  [7:0] image_1_d0;
output  [13:0] image_2_address0;
output   image_2_ce0;
output   image_2_we0;
output  [7:0] image_2_d0;
output  [13:0] image_3_address0;
output   image_3_ce0;
output   image_3_we0;
output  [7:0] image_3_d0;
output  [13:0] image_4_address0;
output   image_4_ce0;
output   image_4_we0;
output  [7:0] image_4_d0;
output  [13:0] image_5_address0;
output   image_5_ce0;
output   image_5_we0;
output  [7:0] image_5_d0;
input  [7:0] in_stream_TDATA;
output   in_stream_TREADY;
input  [0:0] in_stream_TKEEP;
input  [0:0] in_stream_TSTRB;
input  [0:0] in_stream_TUSER;
input  [0:0] in_stream_TLAST;
input  [0:0] in_stream_TID;
input  [0:0] in_stream_TDEST;
output  [30:0] grp_fu_873_p_din0;
output  [32:0] grp_fu_873_p_din1;
input  [62:0] grp_fu_873_p_dout0;
output   grp_fu_873_p_ce;

reg ap_idle;
reg in_stream_TREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln21_fu_235_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    in_stream_TDATA_blk_n;
wire    ap_block_pp0_stage0_grp1;
wire    ap_block_pp0_stage0_11001_grp0;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage0_11001_grp1;
reg   [0:0] icmp_ln21_reg_399;
wire   [61:0] add_ln21_1_fu_240_p2;
reg   [61:0] add_ln21_1_reg_403;
wire   [0:0] icmp_ln22_fu_253_p2;
reg   [0:0] icmp_ln22_reg_408;
wire   [0:0] trunc_ln22_fu_266_p1;
reg   [0:0] trunc_ln22_reg_413;
reg   [0:0] trunc_ln22_reg_413_pp0_iter3_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter4_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter5_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter6_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter7_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter8_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter9_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter10_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter11_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter12_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter13_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter14_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter15_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter16_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter17_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter18_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter19_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter20_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter21_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter22_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter23_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter24_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter25_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter26_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter27_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter28_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter29_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter30_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter31_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter32_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter33_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter34_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter35_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter36_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter37_reg;
reg   [0:0] trunc_ln22_reg_413_pp0_iter38_reg;
reg   [13:0] lshr_ln_reg_417;
reg   [13:0] lshr_ln_reg_417_pp0_iter3_reg;
reg   [13:0] lshr_ln_reg_417_pp0_iter4_reg;
reg   [13:0] lshr_ln_reg_417_pp0_iter5_reg;
reg   [13:0] lshr_ln_reg_417_pp0_iter6_reg;
wire   [30:0] add_ln22_fu_280_p2;
reg   [30:0] add_ln22_reg_422;
wire   [30:0] select_ln21_1_fu_299_p3;
reg   [30:0] select_ln21_1_reg_427;
wire   [62:0] zext_ln21_fu_315_p1;
reg   [6:0] tmp_cast_reg_438;
wire   [13:0] add_ln25_fu_341_p2;
reg   [13:0] add_ln25_reg_443;
reg   [13:0] add_ln25_reg_443_pp0_iter8_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter9_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter10_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter11_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter12_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter13_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter14_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter15_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter16_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter17_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter18_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter19_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter20_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter21_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter22_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter23_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter24_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter25_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter26_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter27_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter28_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter29_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter30_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter31_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter32_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter33_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter34_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter35_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter36_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter37_reg;
reg   [13:0] add_ln25_reg_443_pp0_iter38_reg;
wire   [1:0] grp_fu_319_p2;
reg   [1:0] urem_ln21_reg_448;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [63:0] zext_ln25_fu_349_p1;
reg   [30:0] x_fu_92;
reg   [30:0] ap_sig_allocacmp_x_3;
wire    ap_loop_init;
reg   [30:0] y_fu_96;
reg   [61:0] indvar_flatten_fu_100;
reg   [61:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage0;
reg    image_2_we0_local;
wire   [1:0] trunc_ln21_fu_346_p1;
reg    image_2_ce0_local;
reg    image_3_we0_local;
reg    image_3_ce0_local;
reg    image_r_we0_local;
reg    image_r_ce0_local;
reg    image_1_we0_local;
reg    image_1_ce0_local;
reg    image_4_we0_local;
reg    image_4_ce0_local;
reg    image_5_we0_local;
reg    image_5_ce0_local;
wire   [31:0] zext_ln22_fu_249_p1;
wire   [30:0] select_ln21_fu_258_p3;
wire   [30:0] add_ln21_fu_293_p2;
wire   [2:0] grp_fu_319_p1;
wire   [13:0] tmp_3_fu_334_p3;
reg    grp_fu_212_ce;
reg    grp_fu_319_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 x_fu_92 = 31'd0;
#0 y_fu_96 = 31'd0;
#0 indvar_flatten_fu_100 = 62'd0;
#0 ap_done_reg = 1'b0;
end

process_images_urem_31ns_3ns_2_35_1 #(
    .ID( 1 ),
    .NUM_STAGE( 35 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_31ns_3ns_2_35_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln21_1_reg_427),
    .din1(grp_fu_319_p1),
    .ce(grp_fu_319_ce),
    .dout(grp_fu_319_p2)
);

process_images_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter38_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten_fu_100 <= 62'd0;
        end else if (((icmp_ln21_reg_399 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            indvar_flatten_fu_100 <= add_ln21_1_reg_403;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x_fu_92 <= 31'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            x_fu_92 <= add_ln22_reg_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            y_fu_96 <= 31'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            y_fu_96 <= select_ln21_1_fu_299_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln21_1_reg_403 <= add_ln21_1_fu_240_p2;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln21_reg_399 <= icmp_ln21_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        add_ln22_reg_422 <= add_ln22_fu_280_p2;
        add_ln25_reg_443 <= add_ln25_fu_341_p2;
        add_ln25_reg_443_pp0_iter10_reg <= add_ln25_reg_443_pp0_iter9_reg;
        add_ln25_reg_443_pp0_iter11_reg <= add_ln25_reg_443_pp0_iter10_reg;
        add_ln25_reg_443_pp0_iter12_reg <= add_ln25_reg_443_pp0_iter11_reg;
        add_ln25_reg_443_pp0_iter13_reg <= add_ln25_reg_443_pp0_iter12_reg;
        add_ln25_reg_443_pp0_iter14_reg <= add_ln25_reg_443_pp0_iter13_reg;
        add_ln25_reg_443_pp0_iter15_reg <= add_ln25_reg_443_pp0_iter14_reg;
        add_ln25_reg_443_pp0_iter16_reg <= add_ln25_reg_443_pp0_iter15_reg;
        add_ln25_reg_443_pp0_iter17_reg <= add_ln25_reg_443_pp0_iter16_reg;
        add_ln25_reg_443_pp0_iter18_reg <= add_ln25_reg_443_pp0_iter17_reg;
        add_ln25_reg_443_pp0_iter19_reg <= add_ln25_reg_443_pp0_iter18_reg;
        add_ln25_reg_443_pp0_iter20_reg <= add_ln25_reg_443_pp0_iter19_reg;
        add_ln25_reg_443_pp0_iter21_reg <= add_ln25_reg_443_pp0_iter20_reg;
        add_ln25_reg_443_pp0_iter22_reg <= add_ln25_reg_443_pp0_iter21_reg;
        add_ln25_reg_443_pp0_iter23_reg <= add_ln25_reg_443_pp0_iter22_reg;
        add_ln25_reg_443_pp0_iter24_reg <= add_ln25_reg_443_pp0_iter23_reg;
        add_ln25_reg_443_pp0_iter25_reg <= add_ln25_reg_443_pp0_iter24_reg;
        add_ln25_reg_443_pp0_iter26_reg <= add_ln25_reg_443_pp0_iter25_reg;
        add_ln25_reg_443_pp0_iter27_reg <= add_ln25_reg_443_pp0_iter26_reg;
        add_ln25_reg_443_pp0_iter28_reg <= add_ln25_reg_443_pp0_iter27_reg;
        add_ln25_reg_443_pp0_iter29_reg <= add_ln25_reg_443_pp0_iter28_reg;
        add_ln25_reg_443_pp0_iter30_reg <= add_ln25_reg_443_pp0_iter29_reg;
        add_ln25_reg_443_pp0_iter31_reg <= add_ln25_reg_443_pp0_iter30_reg;
        add_ln25_reg_443_pp0_iter32_reg <= add_ln25_reg_443_pp0_iter31_reg;
        add_ln25_reg_443_pp0_iter33_reg <= add_ln25_reg_443_pp0_iter32_reg;
        add_ln25_reg_443_pp0_iter34_reg <= add_ln25_reg_443_pp0_iter33_reg;
        add_ln25_reg_443_pp0_iter35_reg <= add_ln25_reg_443_pp0_iter34_reg;
        add_ln25_reg_443_pp0_iter36_reg <= add_ln25_reg_443_pp0_iter35_reg;
        add_ln25_reg_443_pp0_iter37_reg <= add_ln25_reg_443_pp0_iter36_reg;
        add_ln25_reg_443_pp0_iter38_reg <= add_ln25_reg_443_pp0_iter37_reg;
        add_ln25_reg_443_pp0_iter8_reg <= add_ln25_reg_443;
        add_ln25_reg_443_pp0_iter9_reg <= add_ln25_reg_443_pp0_iter8_reg;
        icmp_ln22_reg_408 <= icmp_ln22_fu_253_p2;
        lshr_ln_reg_417 <= {{select_ln21_fu_258_p3[14:1]}};
        lshr_ln_reg_417_pp0_iter3_reg <= lshr_ln_reg_417;
        lshr_ln_reg_417_pp0_iter4_reg <= lshr_ln_reg_417_pp0_iter3_reg;
        lshr_ln_reg_417_pp0_iter5_reg <= lshr_ln_reg_417_pp0_iter4_reg;
        lshr_ln_reg_417_pp0_iter6_reg <= lshr_ln_reg_417_pp0_iter5_reg;
        select_ln21_1_reg_427 <= select_ln21_1_fu_299_p3;
        tmp_cast_reg_438 <= {{grp_fu_873_p_dout0[39:33]}};
        trunc_ln22_reg_413 <= trunc_ln22_fu_266_p1;
        trunc_ln22_reg_413_pp0_iter10_reg <= trunc_ln22_reg_413_pp0_iter9_reg;
        trunc_ln22_reg_413_pp0_iter11_reg <= trunc_ln22_reg_413_pp0_iter10_reg;
        trunc_ln22_reg_413_pp0_iter12_reg <= trunc_ln22_reg_413_pp0_iter11_reg;
        trunc_ln22_reg_413_pp0_iter13_reg <= trunc_ln22_reg_413_pp0_iter12_reg;
        trunc_ln22_reg_413_pp0_iter14_reg <= trunc_ln22_reg_413_pp0_iter13_reg;
        trunc_ln22_reg_413_pp0_iter15_reg <= trunc_ln22_reg_413_pp0_iter14_reg;
        trunc_ln22_reg_413_pp0_iter16_reg <= trunc_ln22_reg_413_pp0_iter15_reg;
        trunc_ln22_reg_413_pp0_iter17_reg <= trunc_ln22_reg_413_pp0_iter16_reg;
        trunc_ln22_reg_413_pp0_iter18_reg <= trunc_ln22_reg_413_pp0_iter17_reg;
        trunc_ln22_reg_413_pp0_iter19_reg <= trunc_ln22_reg_413_pp0_iter18_reg;
        trunc_ln22_reg_413_pp0_iter20_reg <= trunc_ln22_reg_413_pp0_iter19_reg;
        trunc_ln22_reg_413_pp0_iter21_reg <= trunc_ln22_reg_413_pp0_iter20_reg;
        trunc_ln22_reg_413_pp0_iter22_reg <= trunc_ln22_reg_413_pp0_iter21_reg;
        trunc_ln22_reg_413_pp0_iter23_reg <= trunc_ln22_reg_413_pp0_iter22_reg;
        trunc_ln22_reg_413_pp0_iter24_reg <= trunc_ln22_reg_413_pp0_iter23_reg;
        trunc_ln22_reg_413_pp0_iter25_reg <= trunc_ln22_reg_413_pp0_iter24_reg;
        trunc_ln22_reg_413_pp0_iter26_reg <= trunc_ln22_reg_413_pp0_iter25_reg;
        trunc_ln22_reg_413_pp0_iter27_reg <= trunc_ln22_reg_413_pp0_iter26_reg;
        trunc_ln22_reg_413_pp0_iter28_reg <= trunc_ln22_reg_413_pp0_iter27_reg;
        trunc_ln22_reg_413_pp0_iter29_reg <= trunc_ln22_reg_413_pp0_iter28_reg;
        trunc_ln22_reg_413_pp0_iter30_reg <= trunc_ln22_reg_413_pp0_iter29_reg;
        trunc_ln22_reg_413_pp0_iter31_reg <= trunc_ln22_reg_413_pp0_iter30_reg;
        trunc_ln22_reg_413_pp0_iter32_reg <= trunc_ln22_reg_413_pp0_iter31_reg;
        trunc_ln22_reg_413_pp0_iter33_reg <= trunc_ln22_reg_413_pp0_iter32_reg;
        trunc_ln22_reg_413_pp0_iter34_reg <= trunc_ln22_reg_413_pp0_iter33_reg;
        trunc_ln22_reg_413_pp0_iter35_reg <= trunc_ln22_reg_413_pp0_iter34_reg;
        trunc_ln22_reg_413_pp0_iter36_reg <= trunc_ln22_reg_413_pp0_iter35_reg;
        trunc_ln22_reg_413_pp0_iter37_reg <= trunc_ln22_reg_413_pp0_iter36_reg;
        trunc_ln22_reg_413_pp0_iter38_reg <= trunc_ln22_reg_413_pp0_iter37_reg;
        trunc_ln22_reg_413_pp0_iter3_reg <= trunc_ln22_reg_413;
        trunc_ln22_reg_413_pp0_iter4_reg <= trunc_ln22_reg_413_pp0_iter3_reg;
        trunc_ln22_reg_413_pp0_iter5_reg <= trunc_ln22_reg_413_pp0_iter4_reg;
        trunc_ln22_reg_413_pp0_iter6_reg <= trunc_ln22_reg_413_pp0_iter5_reg;
        trunc_ln22_reg_413_pp0_iter7_reg <= trunc_ln22_reg_413_pp0_iter6_reg;
        trunc_ln22_reg_413_pp0_iter8_reg <= trunc_ln22_reg_413_pp0_iter7_reg;
        trunc_ln22_reg_413_pp0_iter9_reg <= trunc_ln22_reg_413_pp0_iter8_reg;
        urem_ln21_reg_448 <= grp_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln21_fu_235_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_399 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter38_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) 
    & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_399 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = add_ln21_1_reg_403;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_100;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_grp1))) begin
        ap_sig_allocacmp_x_3 = add_ln22_reg_422;
    end else begin
        ap_sig_allocacmp_x_3 = x_fu_92;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_212_ce = 1'b1;
    end else begin
        grp_fu_212_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_319_ce = 1'b1;
    end else begin
        grp_fu_319_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_1_ce0_local = 1'b1;
    end else begin
        image_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_fu_346_p1 == 2'd0) & (trunc_ln22_reg_413_pp0_iter38_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_1_we0_local = 1'b1;
    end else begin
        image_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_2_ce0_local = 1'b1;
    end else begin
        image_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_fu_346_p1 == 2'd1) & (trunc_ln22_reg_413_pp0_iter38_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_2_we0_local = 1'b1;
    end else begin
        image_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_3_ce0_local = 1'b1;
    end else begin
        image_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_fu_346_p1 == 2'd1) & (trunc_ln22_reg_413_pp0_iter38_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_3_we0_local = 1'b1;
    end else begin
        image_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_4_ce0_local = 1'b1;
    end else begin
        image_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln21_fu_346_p1 == 2'd0) & ~(trunc_ln21_fu_346_p1 == 2'd1) & (trunc_ln22_reg_413_pp0_iter38_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_4_we0_local = 1'b1;
    end else begin
        image_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_5_ce0_local = 1'b1;
    end else begin
        image_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln21_fu_346_p1 == 2'd0) & ~(trunc_ln21_fu_346_p1 == 2'd1) & (trunc_ln22_reg_413_pp0_iter38_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_5_we0_local = 1'b1;
    end else begin
        image_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_r_ce0_local = 1'b1;
    end else begin
        image_r_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_fu_346_p1 == 2'd0) & (trunc_ln22_reg_413_pp0_iter38_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        image_r_we0_local = 1'b1;
    end else begin
        image_r_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        in_stream_TDATA_blk_n = in_stream_TVALID;
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter39 == 1'b1))) begin
        in_stream_TREADY = 1'b1;
    end else begin
        in_stream_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_1_fu_240_p2 = (ap_sig_allocacmp_indvar_flatten_load + 62'd1);

assign add_ln21_fu_293_p2 = (y_fu_96 + 31'd1);

assign add_ln22_fu_280_p2 = (select_ln21_fu_258_p3 + 31'd1);

assign add_ln25_fu_341_p2 = (tmp_3_fu_334_p3 + lshr_ln_reg_417_pp0_iter6_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((in_stream_TVALID == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b1));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((in_stream_TVALID == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((in_stream_TVALID == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b1));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_319_p1 = 31'd3;

assign grp_fu_873_p_ce = grp_fu_212_ce;

assign grp_fu_873_p_din0 = zext_ln21_fu_315_p1;

assign grp_fu_873_p_din1 = 63'd2863311531;

assign icmp_ln21_fu_235_p2 = ((ap_sig_allocacmp_indvar_flatten_load == mul_ln3) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_253_p2 = (($signed(zext_ln22_fu_249_p1) < $signed(img_width)) ? 1'b1 : 1'b0);

assign image_1_address0 = zext_ln25_fu_349_p1;

assign image_1_ce0 = image_1_ce0_local;

assign image_1_d0 = in_stream_TDATA;

assign image_1_we0 = image_1_we0_local;

assign image_2_address0 = zext_ln25_fu_349_p1;

assign image_2_ce0 = image_2_ce0_local;

assign image_2_d0 = in_stream_TDATA;

assign image_2_we0 = image_2_we0_local;

assign image_3_address0 = zext_ln25_fu_349_p1;

assign image_3_ce0 = image_3_ce0_local;

assign image_3_d0 = in_stream_TDATA;

assign image_3_we0 = image_3_we0_local;

assign image_4_address0 = zext_ln25_fu_349_p1;

assign image_4_ce0 = image_4_ce0_local;

assign image_4_d0 = in_stream_TDATA;

assign image_4_we0 = image_4_we0_local;

assign image_5_address0 = zext_ln25_fu_349_p1;

assign image_5_ce0 = image_5_ce0_local;

assign image_5_d0 = in_stream_TDATA;

assign image_5_we0 = image_5_we0_local;

assign image_r_address0 = zext_ln25_fu_349_p1;

assign image_r_ce0 = image_r_ce0_local;

assign image_r_d0 = in_stream_TDATA;

assign image_r_we0 = image_r_we0_local;

assign select_ln21_1_fu_299_p3 = ((icmp_ln22_reg_408[0:0] == 1'b1) ? y_fu_96 : add_ln21_fu_293_p2);

assign select_ln21_fu_258_p3 = ((icmp_ln22_fu_253_p2[0:0] == 1'b1) ? ap_sig_allocacmp_x_3 : 31'd0);

assign tmp_3_fu_334_p3 = {{tmp_cast_reg_438}, {7'd0}};

assign trunc_ln21_fu_346_p1 = urem_ln21_reg_448[1:0];

assign trunc_ln22_fu_266_p1 = select_ln21_fu_258_p3[0:0];

assign zext_ln21_fu_315_p1 = select_ln21_1_reg_427;

assign zext_ln22_fu_249_p1 = ap_sig_allocacmp_x_3;

assign zext_ln25_fu_349_p1 = add_ln25_reg_443_pp0_iter38_reg;

endmodule //process_images_process_images_Pipeline_VITIS_LOOP_21_1_VITIS_LOOP_22_2
